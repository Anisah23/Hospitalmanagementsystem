{"ast":null,"code":"var _jsxFileName = \"/home/anisah/Documents/Hospitalmanagementsystem/react-frontend/src/components/DateFilter/DateFilter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DateFilter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateFilter = ({\n  onDateChange,\n  selectedRange = 'today'\n}) => {\n  _s();\n  const [activeRange, setActiveRange] = useState(selectedRange);\n  const [customStart, setCustomStart] = useState('');\n  const [customEnd, setCustomEnd] = useState('');\n  const ranges = [{\n    key: 'today',\n    label: 'Today'\n  }, {\n    key: 'week',\n    label: 'This Week'\n  }, {\n    key: 'month',\n    label: 'This Month'\n  }, {\n    key: 'custom',\n    label: 'Custom Range'\n  }];\n  const handleRangeClick = range => {\n    setActiveRange(range);\n    const today = new Date();\n    let startDate, endDate;\n    switch (range) {\n      case 'today':\n        startDate = endDate = today.toISOString().split('T')[0];\n        break;\n      case 'week':\n        const weekStart = new Date(today);\n        weekStart.setDate(today.getDate() - today.getDay());\n        startDate = weekStart.toISOString().split('T')[0];\n        endDate = today.toISOString().split('T')[0];\n        break;\n      case 'month':\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];\n        endDate = today.toISOString().split('T')[0];\n        break;\n      default:\n        return;\n    }\n    onDateChange({\n      startDate,\n      endDate,\n      range\n    });\n  };\n  const handleCustomRange = () => {\n    if (customStart && customEnd) {\n      onDateChange({\n        startDate: customStart,\n        endDate: customEnd,\n        range: 'custom'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: ranges.map(range => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${activeRange === range.key ? 'active' : ''}`,\n        onClick: () => handleRangeClick(range.key),\n        children: range.label\n      }, range.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), activeRange === 'custom' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-range\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: customStart,\n        onChange: e => setCustomStart(e.target.value),\n        placeholder: \"Start Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: customEnd,\n        onChange: e => setCustomEnd(e.target.value),\n        placeholder: \"End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCustomRange,\n        className: \"apply-btn\",\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DateFilter, \"4+/KpvxzKfB3S37fdOsz7kzE0L0=\");\n_c = DateFilter;\nexport default DateFilter;\nvar _c;\n$RefreshReg$(_c, \"DateFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DateFilter","onDateChange","selectedRange","_s","activeRange","setActiveRange","customStart","setCustomStart","customEnd","setCustomEnd","ranges","key","label","handleRangeClick","range","today","Date","startDate","endDate","toISOString","split","weekStart","setDate","getDate","getDay","getFullYear","getMonth","handleCustomRange","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/anisah/Documents/Hospitalmanagementsystem/react-frontend/src/components/DateFilter/DateFilter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './DateFilter.css';\n\nconst DateFilter = ({ onDateChange, selectedRange = 'today' }) => {\n  const [activeRange, setActiveRange] = useState(selectedRange);\n  const [customStart, setCustomStart] = useState('');\n  const [customEnd, setCustomEnd] = useState('');\n\n  const ranges = [\n    { key: 'today', label: 'Today' },\n    { key: 'week', label: 'This Week' },\n    { key: 'month', label: 'This Month' },\n    { key: 'custom', label: 'Custom Range' }\n  ];\n\n  const handleRangeClick = (range) => {\n    setActiveRange(range);\n    \n    const today = new Date();\n    let startDate, endDate;\n\n    switch (range) {\n      case 'today':\n        startDate = endDate = today.toISOString().split('T')[0];\n        break;\n      case 'week':\n        const weekStart = new Date(today);\n        weekStart.setDate(today.getDate() - today.getDay());\n        startDate = weekStart.toISOString().split('T')[0];\n        endDate = today.toISOString().split('T')[0];\n        break;\n      case 'month':\n        startDate = new Date(today.getFullYear(), today.getMonth(), 1).toISOString().split('T')[0];\n        endDate = today.toISOString().split('T')[0];\n        break;\n      default:\n        return;\n    }\n\n    onDateChange({ startDate, endDate, range });\n  };\n\n  const handleCustomRange = () => {\n    if (customStart && customEnd) {\n      onDateChange({ startDate: customStart, endDate: customEnd, range: 'custom' });\n    }\n  };\n\n  return (\n    <div className=\"date-filter\">\n      <div className=\"filter-buttons\">\n        {ranges.map(range => (\n          <button\n            key={range.key}\n            className={`filter-btn ${activeRange === range.key ? 'active' : ''}`}\n            onClick={() => handleRangeClick(range.key)}\n          >\n            {range.label}\n          </button>\n        ))}\n      </div>\n      \n      {activeRange === 'custom' && (\n        <div className=\"custom-range\">\n          <input\n            type=\"date\"\n            value={customStart}\n            onChange={(e) => setCustomStart(e.target.value)}\n            placeholder=\"Start Date\"\n          />\n          <input\n            type=\"date\"\n            value={customEnd}\n            onChange={(e) => setCustomEnd(e.target.value)}\n            placeholder=\"End Date\"\n          />\n          <button onClick={handleCustomRange} className=\"apply-btn\">Apply</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DateFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}